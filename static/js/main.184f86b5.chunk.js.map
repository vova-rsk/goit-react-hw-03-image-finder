{"version":3,"sources":["components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","services/pixabay-api.js","utils/utils.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ImageGallery/ImageGallery/ImageGallery.styled.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ImageGallery/ImageGallery/ImageGallery.jsx","App.styled.jsx","App.jsx","index.js"],"names":["Header","styled","header","Searchbar","state","query","handleSubmit","e","preventDefault","onSubmit","props","handleInputChange","setState","currentTarget","value","trim","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","Li","li","ImageGalleryItem","src","alt","dataSrc","index","onClick","loading","LoadMoreButton","button","Button","handleIncrementPage","KEY","BASE_URL","api","fetchImages","page","searchParams","URLSearchParams","q","key","image_type","orientation","per_page","fetch","toString","then","response","ok","json","Promise","rejected","Error","scrollTo","window","top","document","documentElement","scrollHeight","behavior","Overlay","div","Modal","closingByEsc","code","closeModal","closingByClick","target","addEventListener","removeEventListener","width","height","List","ul","Container","LoaderSpinner","color","ImageGallery","isLastPage","searchResult","modal","showModal","Number","dataset","currentItem","find","item","idx","prevState","prevProps","statusChanging","setErrorMessage","isQueryChanged","isPageIncreased","pixabayApi","hits","totalHits","updatedPage","updatedSearchResult","updatedIsLastPage","length","catch","error","message","finally","isShowLoader","currentStatus","isShowLoadButton","map","webformatURL","largeImageURL","tags","Loader","AppContainer","STATUS","App","status","fetchQueryUpdate","statusName","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.184f86b5.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nconst Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  .SearchForm {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n  }\n\n  .SearchForm-button {\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n  }\n\n  .SearchForm-button:hover {\n    opacity: 1;\n  }\n\n  .SearchForm-button-label {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n  }\n\n  .SearchForm-input {\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n  }\n\n  .SearchForm-input::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Searchbar.styled';\n\nexport default class Searchbar extends Component {\n  state = {\n    query: '',\n  };\n\n  /*method for submiting form*/\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { onSubmit } = this.props;\n    const { query } = this.state;\n\n    if (query) onSubmit(query);\n  };\n\n  /*method for updating query-key in local state*/\n  handleInputChange = e => {\n    this.setState({ query: e.currentTarget.value.trim() });\n  };\n\n  render() {\n    const { query } = this.state;\n    return (\n      <Header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleInputChange}\n            value={query}\n          />\n        </form>\n      </Header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst Li = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  .ImageGalleryItem-image {\n    width: 100%;\n    height: 260px;\n    object-fit: cover;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .ImageGalleryItem-image:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport default Li;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Li from './ImageGalleryItem.styled';\n\nconst ImageGalleryItem = ({ src, alt, dataSrc, index, onClick }) => {\n  return (\n    <Li className=\"ImageGalleryItem\">\n      <img\n        src={src}\n        data-src={dataSrc}\n        data-index={index}\n        alt={alt}\n        className=\"ImageGalleryItem-image\"\n        loading=\"lazy\"\n        onClick={onClick}\n      />\n    </Li>\n  );\n};\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  dataSrc: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst LoadMoreButton = styled.button`\n  margin: 32px auto;\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover {\n    background-color: #303f9f;\n  }\n`;\n\nexport default LoadMoreButton;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LoadMoreButton from './Button.styled';\r\n\r\nconst Button = ({ handleIncrementPage }) => {\r\n  return (\r\n    <LoadMoreButton type=\"button\" onClick={handleIncrementPage}>\r\n      Load more\r\n    </LoadMoreButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  handleIncrementPage: PropTypes.func,\r\n};\r\n","const KEY = '22441039-e3c3a22ef42346706974d6393';\nconst BASE_URL = 'https://pixabay.com/api/';\nconst PER_PAGE = 12;\n\nconst fetchImages = (query, page = 1) => {\n  const searchParams = new URLSearchParams({\n    q: query,\n    page,\n    key: KEY,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    per_page: PER_PAGE,\n  });\n\n  return fetch(`${BASE_URL}?${searchParams.toString()}`).then(response => {\n    if (!response.ok) {\n      return Promise.rejected(new Error('Oops, something went wrong!'));\n    }\n    return response.json();\n  });\n};\n\nconst api = {\n  fetchImages,\n};\n\nexport default api;\n","const scrollTo = () => {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  });\n};\n\nexport default scrollTo;\n","import styled from '@emotion/styled';\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n\n  .Modal {\n    max-width: calc(100vw - 48px);\n    max-height: calc(100vh - 24px);\n  }\n`;\n\nexport default Overlay;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Overlay from './Modal.styled';\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.closingByEsc);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.closingByEsc);\n  }\n\n  /*method for closing modal by pressing Esc*/\n  closingByEsc = e => {\n    if (e.code === 'Escape') this.props.closeModal();\n  };\n\n  /*method for closing modal by clicking on overlay*/\n  closingByClick = e => {\n    if (e.currentTarget === e.target) this.props.closeModal();\n  };\n\n  render() {\n    const { src, alt } = this.props;\n\n    return (\n      <Overlay className=\"Overlay\" onClick={this.closingByClick}>\n        <div className=\"Modal\">\n          <img src={src} alt={alt} width=\"1024\" height=\"768\" />\n        </div>\n      </Overlay>\n    );\n  }\n}\n\nModal.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport default List;\n","import styled from '@emotion/styled';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport default Container;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Container from './Loader.styled';\n\nconst LoaderSpinner = () => {\n  const options = {\n    type: 'ThreeDots',\n    color: '#eb4034',\n    height: 100,\n    width: 100,\n  };\n  return (\n    <Container>\n      <Loader {...options} />\n    </Container>\n  );\n};\n\nexport default LoaderSpinner;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Button from '../../Button';\nimport pixabayApi from '../../../services/pixabay-api';\nimport scrollTo from '../../../utils';\nimport Modal from '../../Modal';\nimport List from './ImageGallery.styled';\nimport LoaderSpinner from '../../Loader/';\n\nexport default class ImageGallery extends Component {\n  state = {\n    isLastPage: true,\n    page: 1,\n    searchResult: [],\n    modal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { page } = this.state;\n    const { query, statusChanging, setErrorMessage } = this.props;\n\n    /*check for changes in query or page in local state.\n     * If was new search or clicked on LoadMore btn - then makes fetch\n     */\n    const isQueryChanged = prevProps.query !== query;\n    const isPageIncreased = prevState.page < page;\n\n    if (isQueryChanged || isPageIncreased) {\n      statusChanging('pending');\n\n      if (isQueryChanged) {\n        this.setState({ searchResult: [] });\n      }\n\n      pixabayApi\n        .fetchImages(query, isQueryChanged ? 1 : page)\n        .then(({ hits, totalHits }) =>\n          this.setState(prevState => {\n            const updatedPage = isQueryChanged ? 1 : prevState.page;\n            const updatedSearchResult = isQueryChanged\n              ? hits\n              : [...prevState.searchResult, ...hits];\n            const updatedIsLastPage = isQueryChanged\n              ? hits.length >= totalHits\n              : [...prevState.searchResult, ...hits].length >= totalHits;\n\n            return {\n              ...prevState,\n              page: updatedPage,\n              searchResult: updatedSearchResult,\n              isLastPage: updatedIsLastPage,\n            };\n          }),\n        )\n        .catch(error => {\n          setErrorMessage(error.message);\n          statusChanging('error');\n        })\n        .finally(() => {\n          statusChanging('resolved');\n          scrollTo();\n        });\n    }\n  }\n\n  /*method for showing the modal*/\n  showModal = e => {\n    const index = Number(e.currentTarget.dataset.index);\n    const { searchResult } = this.state;\n    const currentItem = searchResult.find((item, idx) => idx === index);\n    this.setState({ modal: currentItem });\n  };\n\n  /*method for closing the modal*/\n  closeModal = () => {\n    this.setState({ modal: false });\n  };\n\n  /*method for incrementing the page number by 1*/\n  handleIncrementPage = () => {\n    this.setState(prevState => ({ ...prevState, page: prevState.page + 1 }));\n  };\n\n  render() {\n    const { searchResult, isLastPage, modal } = this.state;\n    const isShowLoader = this.props.currentStatus === 'pending' ? true : false;\n    const isShowLoadButton = !isLastPage && !isShowLoader ? true : false;\n\n    return (\n      <>\n        <List className=\"ImageGallery\">\n          {searchResult.map(({ webformatURL, largeImageURL, tags }, idx) => (\n            <ImageGalleryItem\n              key={idx}\n              src={webformatURL}\n              index={idx}\n              dataSrc={largeImageURL}\n              alt={tags}\n              onClick={this.showModal}\n            />\n          ))}\n        </List>\n        {isShowLoadButton && (\n          <Button handleIncrementPage={this.handleIncrementPage} />\n        )}\n        {isShowLoader && <LoaderSpinner />}\n        {modal && (\n          <Modal\n            src={modal.largeImageURL}\n            alt={modal.tags}\n            closeModal={this.closeModal}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  query: PropTypes.string.isRequired,\n  statusChanging: PropTypes.func.isRequired,\n  setErrorMessage: PropTypes.func.isRequired,\n  currentStatus: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst AppContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n`;\n\nexport default AppContainer;\n","import React, { Component } from 'react';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport AppContainer from './App.styled';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n  ERROR: 'error',\n};\n\nexport default class App extends Component {\n  state = {\n    query: '',\n    status: STATUS.IDLE,\n    error: '',\n  };\n\n  /*method for getting query-data from components*/\n  fetchQueryUpdate = query => {\n    this.setState({ query });\n  };\n\n  /*method for setting status in local state*/\n  statusChanging = statusName => {\n    this.setState({ status: statusName });\n  };\n\n  /*method for setting error-message in local state*/\n  setErrorMessage = message => {\n    this.setState({ error: message });\n  };\n\n  render() {\n    const { query, status, error } = this.state;\n    return (\n      <AppContainer>\n        <Searchbar onSubmit={this.fetchQueryUpdate} />\n        {status !== STATUS.ERROR && (\n          <ImageGallery\n            query={query}\n            statusChanging={this.statusChanging}\n            setErrorMessage={this.setErrorMessage}\n            currentStatus={status}\n          />\n        )}\n        {status === STATUS.ERROR && <div>{error}</div>}\n      </AppContainer>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}