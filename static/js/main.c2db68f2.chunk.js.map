{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","services/pixabay-api.js","utils/utils.js","components/Modal/Modal.jsx","components/ImageGallery/ImageGallery/ImageGallery.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","App.jsx","index.js"],"names":["Searchbar","state","query","handleSubmit","e","preventDefault","fetchQueryUpdate","props","handleInputChange","setState","currentTarget","value","trim","className","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","alt","dataSrc","index","onClick","loading","LoadMoreButton","styled","button","Button","handleIncrementPage","KEY","fetchImages","page","baseUrl","searchParams","URLSearchParams","q","key","image_type","orientation","per_page","fetch","toString","then","response","ok","json","Promise","rejected","Error","scrollTo","window","top","document","documentElement","scrollHeight","behavior","Modal","closingByEsc","code","closeModal","closingByClick","target","addEventListener","removeEventListener","width","height","ImageGallery","isLastPage","searchResult","modal","showModal","Number","dataset","currentItem","find","item","idx","prevState","prevProps","statusChanging","setErrorMessage","isQueryChanged","isPageIncreased","hits","totalHits","length","catch","error","message","finally","map","id","webformatURL","largeImageURL","tags","Container","div","LoaderSpinner","color","App","status","statusName","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c2db68f2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Searchbar extends Component {\n  state = {\n    query: '',\n  };\n\n  /*method for submiting form*/\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { fetchQueryUpdate } = this.props;\n    const { query } = this.state;\n\n    if (query) fetchQueryUpdate(query);\n  };\n\n  /*method for updating query-key in local state*/\n  handleInputChange = e => {\n    this.setState({ query: e.currentTarget.value.trim() });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleInputChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  fetchQueryUpdate: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ src, alt, dataSrc, index, onClick }) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={src}\n        data-src={dataSrc}\n        data-index={index}\n        alt={alt}\n        className=\"ImageGalleryItem-image\"\n        loading=\"lazy\"\n        onClick={onClick}\n      />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  dataSrc: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst LoadMoreButton = styled.button`\n  margin: 32px auto;\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n\nexport default LoadMoreButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LoadMoreButton from './Button.styled';\n\nconst Button = ({ handleIncrementPage }) => {\n  return (\n    <LoadMoreButton type=\"button\" onClick={handleIncrementPage}>\n      Load more\n    </LoadMoreButton>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  handleIncrementPage: PropTypes.func,\n};\n","const KEY = '22441039-e3c3a22ef42346706974d6393';\nconst PER_PAGE = 12;\n\nconst fetchImages = (query, page = 1) => {\n  const baseUrl = 'https://pixabay.com/api/';\n  const searchParams = new URLSearchParams({\n    q: query,\n    page,\n    key: KEY,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    per_page: PER_PAGE,\n  });\n\n  return fetch(`${baseUrl}?${searchParams.toString()}`).then(response => {\n    if (!response.ok) {\n      return Promise.rejected(new Error('Oops, something went wrong!'));\n    }\n    return response.json();\n  });\n};\n\nexport default fetchImages;\n","const scrollTo = () => {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  });\n};\n\nexport default scrollTo;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.closingByEsc);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.closingByEsc);\n  }\n\n  /*method for closing modal by pressing Esc*/\n  closingByEsc = e => {\n    if (e.code === 'Escape') this.props.closeModal();\n  };\n\n  /*method for closing modal by clicking on overlay*/\n  closingByClick = e => {\n    if (e.currentTarget === e.target) this.props.closeModal();\n  };\n\n  render() {\n    const { src, alt } = this.props;\n\n    return (\n      <div className=\"Overlay\" onClick={this.closingByClick}>\n        <div className=\"Modal\">\n          <img src={src} alt={alt} width=\"800\" height=\"600\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Button from '../../Button';\nimport fetchImages from '../../../services/pixabay-api';\nimport scrollTo from '../../../utils';\nimport Modal from '../../Modal';\n\nexport default class ImageGallery extends Component {\n  state = {\n    isLastPage: true,\n    page: 1,\n    searchResult: [],\n    modal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { page } = this.state;\n    const { query, statusChanging, setErrorMessage } = this.props;\n\n    const isQueryChanged = prevProps.query !== query;\n    const isPageIncreased = prevState.page < page;\n\n    if (isQueryChanged || isPageIncreased) {\n      statusChanging('pending');\n\n      fetchImages(query, isQueryChanged ? 1 : page)\n        .then(({ hits, totalHits }) =>\n          this.setState(prevState => {\n            const updatedPage = isQueryChanged ? 1 : prevState.page;\n            const updatedSearchResult = isQueryChanged ? hits : [...prevState.searchResult, ...hits];\n            const updatedIsLastPage = isQueryChanged ? hits.length >= totalHits : [...prevState.searchResult, ...hits].length >= totalHits;\n            \n            return {\n              page: updatedPage,\n              searchResult: updatedSearchResult,\n              isLastPage: updatedIsLastPage,\n            };\n          }),\n        )\n        .catch(error => {\n          setErrorMessage(error.message);\n          statusChanging('error');\n        })\n        .finally(() => {\n          statusChanging('resolved');\n          scrollTo();\n        });\n    }\n  }\n\n  /*method for showing the modal*/\n  showModal = e => {\n    const index = Number(e.currentTarget.dataset.index);\n    const { searchResult } = this.state;\n    const currentItem = searchResult.find((item, idx) => idx === index);\n    this.setState({ modal: currentItem });\n  };\n\n  /*method for closing the modal*/\n  closeModal = () => {\n    this.setState({ modal: false });\n  };\n\n  /*method for incrementing the page number by 1*/\n  handleIncrementPage = () => {\n    this.setState(prevState => ({ ...prevState, page: prevState.page + 1 }));\n  };\n\n  render() {\n    const { searchResult, isLastPage, modal } = this.state;\n    \n    return (\n      <>\n        <ul className=\"ImageGallery\">\n          {searchResult.map(\n            ({ id, webformatURL, largeImageURL, tags }, idx) => (\n              <ImageGalleryItem\n                // key={id}\n                key={idx}\n                src={webformatURL}\n                index={idx}\n                dataSrc={largeImageURL}\n                alt={tags}\n                onClick={this.showModal}\n              />\n            ),\n          )}\n        </ul>\n        {!isLastPage && (\n          <Button handleIncrementPage={this.handleIncrementPage} />\n        )}\n        {modal && (\n          <Modal\n            src={modal.largeImageURL}\n            alt={modal.tags}\n            closeModal={this.closeModal}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  query: PropTypes.string.isRequired,\n  statusChanging: PropTypes.func.isRequired,\n  setErrorMessage: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst Container = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport default Container;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Container from './Loader.styled';\n\nconst LoaderSpinner = () => {\n  const options = {\n    type: 'ThreeDots',\n    color: '#eb4034',\n    height: 100,\n    width: 100,\n  };\n  return (\n    <Container>\n      <Loader {...options} />\n    </Container>\n  );\n};\n\nexport default LoaderSpinner;\n","import React, { Component } from 'react';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport LoaderSpinner from './components/Loader';\n\n// const STATUS = {\n//   IDLE: 'idle',\n//   PENDING: 'pending',\n//   RESOLVED: 'resolved',\n//   ERROR:'error'\n// };\n\nclass App extends Component {\n  state = {\n    query: '',\n    status: 'idle',\n    error: '',\n  };\n\n  /*method for getting query-data from components*/\n  fetchQueryUpdate = query => {\n    this.setState({ query });\n  };\n\n  /*method for setting status in local state*/\n  statusChanging = statusName => {\n    this.setState({ status: statusName });\n  };\n\n  /*method for setting error-message in local state*/\n  setErrorMessage = message => {\n    this.setState({ error: message });\n  };\n\n  render() {\n    const { query, status, error } = this.state;\n    return (\n      <>\n        <Searchbar fetchQueryUpdate={this.fetchQueryUpdate} />\n        {status === 'pending' && <LoaderSpinner />}\n        {status !== 'error' && (\n          <ImageGallery\n            query={query}\n            statusChanging={this.statusChanging}\n            setErrorMessage={this.setErrorMessage}\n          />\n        )}\n        {status === 'error' && <div>{error}</div>}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}